// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MagicFire.HuanHuoUFrame {
    using MagicFire.HuanHuoUFrame;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public class SkillEntityControllerBase : GongFaEntityController {
        
        private uFrame.MVVM.ViewModels.IViewModelManager<SkillEntityViewModel> _SkillEntityViewModelManager;
        
        [uFrame.IOC.InjectAttribute("SkillEntity")]
        public uFrame.MVVM.ViewModels.IViewModelManager<SkillEntityViewModel> SkillEntityViewModelManager {
            get {
                return _SkillEntityViewModelManager;
            }
            set {
                _SkillEntityViewModelManager = value;
            }
        }
        
        public IEnumerable<SkillEntityViewModel> SkillEntityViewModels {
            get {
                return SkillEntityViewModelManager.ViewModels;
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModels.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeSkillEntity(((SkillEntityViewModel)(viewModel)));
        }
        
        public virtual SkillEntityViewModel CreateSkillEntity() {
            return ((SkillEntityViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModels.ViewModel CreateEmpty() {
            return new SkillEntityViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeSkillEntity(SkillEntityViewModel viewModel) {
            // This is called when a SkillEntityViewModel is created
            viewModel.OnSkillStartCast.Action = this.OnSkillStartCastHandler;
            viewModel.OnSkillEndCast.Action = this.OnSkillEndCastHandler;
            viewModel.RequestCastSkillByName.Action = this.RequestCastSkillByNameHandler;
            viewModel.OnSkillStartSing.Action = this.OnSkillStartSingHandler;
            SkillEntityViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModels.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            SkillEntityViewModelManager.Remove(viewModel);
        }
        
        public virtual void OnSkillStartCastHandler(OnSkillStartCastCommand command) {
            this.OnSkillStartCast(command.Sender as SkillEntityViewModel, command);
        }
        
        public virtual void OnSkillEndCastHandler(OnSkillEndCastCommand command) {
            this.OnSkillEndCast(command.Sender as SkillEntityViewModel, command);
        }
        
        public virtual void RequestCastSkillByNameHandler(RequestCastSkillByNameCommand command) {
            this.RequestCastSkillByName(command.Sender as SkillEntityViewModel, command);
        }
        
        public virtual void OnSkillStartSingHandler(OnSkillStartSingCommand command) {
            this.OnSkillStartSing(command.Sender as SkillEntityViewModel, command);
        }
        
        public virtual void OnSkillStartCast(SkillEntityViewModel viewModel, OnSkillStartCastCommand arg) {
        }
        
        public virtual void OnSkillEndCast(SkillEntityViewModel viewModel, OnSkillEndCastCommand arg) {
        }
        
        public virtual void RequestCastSkillByName(SkillEntityViewModel viewModel, RequestCastSkillByNameCommand arg) {
        }
        
        public virtual void OnSkillStartSing(SkillEntityViewModel viewModel, OnSkillStartSingCommand arg) {
        }
    }
}
