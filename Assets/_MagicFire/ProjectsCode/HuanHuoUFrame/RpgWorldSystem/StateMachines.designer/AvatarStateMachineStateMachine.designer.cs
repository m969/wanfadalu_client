// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MagicFire.HuanHuoUFrame {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.MVVM.StateMachines;
    
    
    public class AvatarStateMachine : uFrame.MVVM.StateMachines.StateMachine {
        
        private uFrame.MVVM.StateMachines.StateMachineTrigger _CastSkill;
        
        private uFrame.MVVM.StateMachines.StateMachineTrigger _Run;
        
        private uFrame.MVVM.StateMachines.StateMachineTrigger _Hit;
        
        private uFrame.MVVM.StateMachines.StateMachineTrigger _Walk;
        
        private uFrame.MVVM.StateMachines.StateMachineTrigger _Dead;
        
        private uFrame.MVVM.StateMachines.StateMachineTrigger _Stand;
        
        private CastSkillState _CastSkillState;
        
        private IdleState _IdleState;
        
        private DeadState _DeadState;
        
        private HitState _HitState;
        
        private RunState _RunState;
        
        private WalkState _WalkState;
        
        public AvatarStateMachine(uFrame.MVVM.ViewModels.ViewModel vm, string propertyName) : 
                base(vm, propertyName) {
        }
        
        public AvatarStateMachine() : 
                base(null, string.Empty) {
        }
        
        public override uFrame.MVVM.StateMachines.State StartState {
            get {
                return this.IdleState;
            }
        }
        
        public virtual uFrame.MVVM.StateMachines.StateMachineTrigger CastSkill {
            get {
                if (this._CastSkill == null) {
                    this._CastSkill = new StateMachineTrigger(this , "CastSkill");
                }
                return _CastSkill;
            }
            set {
                _CastSkill = value;
            }
        }
        
        public virtual uFrame.MVVM.StateMachines.StateMachineTrigger Run {
            get {
                if (this._Run == null) {
                    this._Run = new StateMachineTrigger(this , "Run");
                }
                return _Run;
            }
            set {
                _Run = value;
            }
        }
        
        public virtual uFrame.MVVM.StateMachines.StateMachineTrigger Hit {
            get {
                if (this._Hit == null) {
                    this._Hit = new StateMachineTrigger(this , "Hit");
                }
                return _Hit;
            }
            set {
                _Hit = value;
            }
        }
        
        public virtual uFrame.MVVM.StateMachines.StateMachineTrigger Walk {
            get {
                if (this._Walk == null) {
                    this._Walk = new StateMachineTrigger(this , "Walk");
                }
                return _Walk;
            }
            set {
                _Walk = value;
            }
        }
        
        public virtual uFrame.MVVM.StateMachines.StateMachineTrigger Dead {
            get {
                if (this._Dead == null) {
                    this._Dead = new StateMachineTrigger(this , "Dead");
                }
                return _Dead;
            }
            set {
                _Dead = value;
            }
        }
        
        public virtual uFrame.MVVM.StateMachines.StateMachineTrigger Stand {
            get {
                if (this._Stand == null) {
                    this._Stand = new StateMachineTrigger(this , "Stand");
                }
                return _Stand;
            }
            set {
                _Stand = value;
            }
        }
        
        public virtual CastSkillState CastSkillState {
            get {
                if (this._CastSkillState == null) {
                    this._CastSkillState = new CastSkillState();
                }
                return _CastSkillState;
            }
            set {
                _CastSkillState = value;
            }
        }
        
        public virtual IdleState IdleState {
            get {
                if (this._IdleState == null) {
                    this._IdleState = new IdleState();
                }
                return _IdleState;
            }
            set {
                _IdleState = value;
            }
        }
        
        public virtual DeadState DeadState {
            get {
                if (this._DeadState == null) {
                    this._DeadState = new DeadState();
                }
                return _DeadState;
            }
            set {
                _DeadState = value;
            }
        }
        
        public virtual HitState HitState {
            get {
                if (this._HitState == null) {
                    this._HitState = new HitState();
                }
                return _HitState;
            }
            set {
                _HitState = value;
            }
        }
        
        public virtual RunState RunState {
            get {
                if (this._RunState == null) {
                    this._RunState = new RunState();
                }
                return _RunState;
            }
            set {
                _RunState = value;
            }
        }
        
        public virtual WalkState WalkState {
            get {
                if (this._WalkState == null) {
                    this._WalkState = new WalkState();
                }
                return _WalkState;
            }
            set {
                _WalkState = value;
            }
        }
        
        public override void Compose(System.Collections.Generic.List<uFrame.MVVM.StateMachines.State> states) {
            base.Compose(states);
            CastSkillState.Run = new StateTransition("Run", CastSkillState, RunState);
            Transitions.Add(CastSkillState.Run);
            CastSkillState.Stand = new StateTransition("Stand", CastSkillState, IdleState);
            Transitions.Add(CastSkillState.Stand);
            CastSkillState.Dead = new StateTransition("Dead", CastSkillState, DeadState);
            Transitions.Add(CastSkillState.Dead);
            CastSkillState.AddTrigger(Run, CastSkillState.Run);
            CastSkillState.AddTrigger(Stand, CastSkillState.Stand);
            CastSkillState.AddTrigger(Dead, CastSkillState.Dead);
            CastSkillState.StateMachine = this;
            states.Add(CastSkillState);
            IdleState.Hit = new StateTransition("Hit", IdleState, HitState);
            Transitions.Add(IdleState.Hit);
            IdleState.Walk = new StateTransition("Walk", IdleState, WalkState);
            Transitions.Add(IdleState.Walk);
            IdleState.Run = new StateTransition("Run", IdleState, RunState);
            Transitions.Add(IdleState.Run);
            IdleState.CastSkill = new StateTransition("CastSkill", IdleState, CastSkillState);
            Transitions.Add(IdleState.CastSkill);
            IdleState.Dead = new StateTransition("Dead", IdleState, DeadState);
            Transitions.Add(IdleState.Dead);
            IdleState.AddTrigger(Hit, IdleState.Hit);
            IdleState.AddTrigger(Walk, IdleState.Walk);
            IdleState.AddTrigger(Run, IdleState.Run);
            IdleState.AddTrigger(CastSkill, IdleState.CastSkill);
            IdleState.AddTrigger(Dead, IdleState.Dead);
            IdleState.StateMachine = this;
            states.Add(IdleState);
            DeadState.Stand = new StateTransition("Stand", DeadState, IdleState);
            Transitions.Add(DeadState.Stand);
            DeadState.AddTrigger(Stand, DeadState.Stand);
            DeadState.StateMachine = this;
            states.Add(DeadState);
            HitState.Dead = new StateTransition("Dead", HitState, DeadState);
            Transitions.Add(HitState.Dead);
            HitState.Stand = new StateTransition("Stand", HitState, IdleState);
            Transitions.Add(HitState.Stand);
            HitState.AddTrigger(Dead, HitState.Dead);
            HitState.AddTrigger(Stand, HitState.Stand);
            HitState.StateMachine = this;
            states.Add(HitState);
            RunState.Stand = new StateTransition("Stand", RunState, IdleState);
            Transitions.Add(RunState.Stand);
            RunState.Dead = new StateTransition("Dead", RunState, DeadState);
            Transitions.Add(RunState.Dead);
            RunState.Walk = new StateTransition("Walk", RunState, WalkState);
            Transitions.Add(RunState.Walk);
            RunState.CastSkill = new StateTransition("CastSkill", RunState, CastSkillState);
            Transitions.Add(RunState.CastSkill);
            RunState.AddTrigger(Stand, RunState.Stand);
            RunState.AddTrigger(Dead, RunState.Dead);
            RunState.AddTrigger(Walk, RunState.Walk);
            RunState.AddTrigger(CastSkill, RunState.CastSkill);
            RunState.StateMachine = this;
            states.Add(RunState);
            WalkState.Stand = new StateTransition("Stand", WalkState, IdleState);
            Transitions.Add(WalkState.Stand);
            WalkState.Run = new StateTransition("Run", WalkState, RunState);
            Transitions.Add(WalkState.Run);
            WalkState.Dead = new StateTransition("Dead", WalkState, DeadState);
            Transitions.Add(WalkState.Dead);
            WalkState.AddTrigger(Stand, WalkState.Stand);
            WalkState.AddTrigger(Run, WalkState.Run);
            WalkState.AddTrigger(Dead, WalkState.Dead);
            WalkState.StateMachine = this;
            states.Add(WalkState);
        }
    }
    
    public class HitState : uFrame.MVVM.StateMachines.State {
        
        private uFrame.MVVM.StateMachines.StateTransition _Dead;
        
        private uFrame.MVVM.StateMachines.StateTransition _Stand;
        
        public uFrame.MVVM.StateMachines.StateTransition Dead {
            get {
                return _Dead;
            }
            set {
                _Dead = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Stand {
            get {
                return _Stand;
            }
            set {
                _Stand = value;
            }
        }
        
        public override string Name {
            get {
                return "HitState";
            }
        }
        
        public virtual void DeadTransition() {
            this.Transition(this.Dead);
        }
        
        public virtual void StandTransition() {
            this.Transition(this.Stand);
        }
    }
    
    public class CastSkillState : uFrame.MVVM.StateMachines.State {
        
        private uFrame.MVVM.StateMachines.StateTransition _Run;
        
        private uFrame.MVVM.StateMachines.StateTransition _Stand;
        
        private uFrame.MVVM.StateMachines.StateTransition _Dead;
        
        public uFrame.MVVM.StateMachines.StateTransition Run {
            get {
                return _Run;
            }
            set {
                _Run = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Stand {
            get {
                return _Stand;
            }
            set {
                _Stand = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Dead {
            get {
                return _Dead;
            }
            set {
                _Dead = value;
            }
        }
        
        public override string Name {
            get {
                return "CastSkillState";
            }
        }
        
        public virtual void RunTransition() {
            this.Transition(this.Run);
        }
        
        public virtual void StandTransition() {
            this.Transition(this.Stand);
        }
        
        public virtual void DeadTransition() {
            this.Transition(this.Dead);
        }
    }
    
    public class IdleState : uFrame.MVVM.StateMachines.State {
        
        private uFrame.MVVM.StateMachines.StateTransition _Hit;
        
        private uFrame.MVVM.StateMachines.StateTransition _Walk;
        
        private uFrame.MVVM.StateMachines.StateTransition _Run;
        
        private uFrame.MVVM.StateMachines.StateTransition _CastSkill;
        
        private uFrame.MVVM.StateMachines.StateTransition _Dead;
        
        public uFrame.MVVM.StateMachines.StateTransition Hit {
            get {
                return _Hit;
            }
            set {
                _Hit = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Walk {
            get {
                return _Walk;
            }
            set {
                _Walk = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Run {
            get {
                return _Run;
            }
            set {
                _Run = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition CastSkill {
            get {
                return _CastSkill;
            }
            set {
                _CastSkill = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Dead {
            get {
                return _Dead;
            }
            set {
                _Dead = value;
            }
        }
        
        public override string Name {
            get {
                return "IdleState";
            }
        }
        
        public virtual void HitTransition() {
            this.Transition(this.Hit);
        }
        
        public virtual void WalkTransition() {
            this.Transition(this.Walk);
        }
        
        public virtual void RunTransition() {
            this.Transition(this.Run);
        }
        
        public virtual void CastSkillTransition() {
            this.Transition(this.CastSkill);
        }
        
        public virtual void DeadTransition() {
            this.Transition(this.Dead);
        }
    }
    
    public class DeadState : uFrame.MVVM.StateMachines.State {
        
        private uFrame.MVVM.StateMachines.StateTransition _Stand;
        
        public uFrame.MVVM.StateMachines.StateTransition Stand {
            get {
                return _Stand;
            }
            set {
                _Stand = value;
            }
        }
        
        public override string Name {
            get {
                return "DeadState";
            }
        }
        
        public virtual void StandTransition() {
            this.Transition(this.Stand);
        }
    }
    
    public class WalkState : uFrame.MVVM.StateMachines.State {
        
        private uFrame.MVVM.StateMachines.StateTransition _Stand;
        
        private uFrame.MVVM.StateMachines.StateTransition _Run;
        
        private uFrame.MVVM.StateMachines.StateTransition _Dead;
        
        public uFrame.MVVM.StateMachines.StateTransition Stand {
            get {
                return _Stand;
            }
            set {
                _Stand = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Run {
            get {
                return _Run;
            }
            set {
                _Run = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Dead {
            get {
                return _Dead;
            }
            set {
                _Dead = value;
            }
        }
        
        public override string Name {
            get {
                return "WalkState";
            }
        }
        
        public virtual void StandTransition() {
            this.Transition(this.Stand);
        }
        
        public virtual void RunTransition() {
            this.Transition(this.Run);
        }
        
        public virtual void DeadTransition() {
            this.Transition(this.Dead);
        }
    }
    
    public class RunState : uFrame.MVVM.StateMachines.State {
        
        private uFrame.MVVM.StateMachines.StateTransition _Stand;
        
        private uFrame.MVVM.StateMachines.StateTransition _Dead;
        
        private uFrame.MVVM.StateMachines.StateTransition _Walk;
        
        private uFrame.MVVM.StateMachines.StateTransition _CastSkill;
        
        public uFrame.MVVM.StateMachines.StateTransition Stand {
            get {
                return _Stand;
            }
            set {
                _Stand = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Dead {
            get {
                return _Dead;
            }
            set {
                _Dead = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition Walk {
            get {
                return _Walk;
            }
            set {
                _Walk = value;
            }
        }
        
        public uFrame.MVVM.StateMachines.StateTransition CastSkill {
            get {
                return _CastSkill;
            }
            set {
                _CastSkill = value;
            }
        }
        
        public override string Name {
            get {
                return "RunState";
            }
        }
        
        public virtual void StandTransition() {
            this.Transition(this.Stand);
        }
        
        public virtual void DeadTransition() {
            this.Transition(this.Dead);
        }
        
        public virtual void WalkTransition() {
            this.Transition(this.Walk);
        }
        
        public virtual void CastSkillTransition() {
            this.Transition(this.CastSkill);
        }
    }
}
