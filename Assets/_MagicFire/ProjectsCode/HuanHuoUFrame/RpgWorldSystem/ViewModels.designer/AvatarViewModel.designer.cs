// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MagicFire.HuanHuoUFrame {
    using MagicFire.HuanHuoUFrame;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.Kernel.Serialization;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.MVVM.ViewModels;
    using UniRx;
    using UnityEngine;
    
    
    public partial class AvatarViewModelBase : CampEntityViewModel {
        
        private AvatarStateMachine _avatarStateProperty;
        
        private P<System.Object> _avatarBagProperty;
        
        private P<Int32> _goldCountProperty;
        
        private Signal<onMainAvatarEnterSpaceCommand> _onMainAvatarEnterSpace;
        
        private Signal<onMainAvatarLeaveSpaceCommand> _onMainAvatarLeaveSpace;
        
        private Signal<DoMoveCommand> _DoMove;
        
        private Signal<OnStopMoveCommand> _OnStopMove;
        
        public AvatarViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
        
        public virtual AvatarStateMachine avatarStateProperty {
            get {
                return _avatarStateProperty;
            }
            set {
                _avatarStateProperty = value;
            }
        }
        
        public virtual uFrame.MVVM.StateMachines.State avatarState {
            get {
                return avatarStateProperty.Value;
            }
            set {
                avatarStateProperty.Value = value;
            }
        }
        
        public virtual P<System.Object> avatarBagProperty {
            get {
                return _avatarBagProperty;
            }
            set {
                _avatarBagProperty = value;
            }
        }
        
        public virtual P<Int32> goldCountProperty {
            get {
                return _goldCountProperty;
            }
            set {
                _goldCountProperty = value;
            }
        }
        
        public virtual object avatarBag {
            get {
                return avatarBagProperty.Value;
            }
            set {
                avatarBagProperty.Value = value;
            }
        }
        
        public virtual Int32 goldCount {
            get {
                return goldCountProperty.Value;
            }
            set {
                goldCountProperty.Value = value;
            }
        }
        
        public virtual Signal<onMainAvatarEnterSpaceCommand> onMainAvatarEnterSpace {
            get {
                return _onMainAvatarEnterSpace;
            }
            set {
                _onMainAvatarEnterSpace = value;
            }
        }
        
        public virtual Signal<onMainAvatarLeaveSpaceCommand> onMainAvatarLeaveSpace {
            get {
                return _onMainAvatarLeaveSpace;
            }
            set {
                _onMainAvatarLeaveSpace = value;
            }
        }
        
        public virtual Signal<DoMoveCommand> DoMove {
            get {
                return _DoMove;
            }
            set {
                _DoMove = value;
            }
        }
        
        public virtual Signal<OnStopMoveCommand> OnStopMove {
            get {
                return _OnStopMove;
            }
            set {
                _OnStopMove = value;
            }
        }
        
        public override void Bind() {
            base.Bind();
            this.onMainAvatarEnterSpace = new Signal<onMainAvatarEnterSpaceCommand>(this);
            this.onMainAvatarLeaveSpace = new Signal<onMainAvatarLeaveSpaceCommand>(this);
            this.DoMove = new Signal<DoMoveCommand>(this);
            this.OnStopMove = new Signal<OnStopMoveCommand>(this);
            _avatarBagProperty = new P<System.Object>(this, "avatarBag");
            _goldCountProperty = new P<Int32>(this, "goldCount");
            _avatarStateProperty = new AvatarStateMachine(this, "avatarState");
        }
        
        public virtual void Execute(onMainAvatarEnterSpaceCommand argument) {
            this.onMainAvatarEnterSpace.OnNext(argument);
        }
        
        public virtual void Execute(onMainAvatarLeaveSpaceCommand argument) {
            this.onMainAvatarLeaveSpace.OnNext(argument);
        }
        
        public virtual void Execute(DoMoveCommand argument) {
            this.DoMove.OnNext(argument);
        }
        
        public virtual void Execute(OnStopMoveCommand argument) {
            this.OnStopMove.OnNext(argument);
        }
        
        public virtual void onMainAvatarEnterSpace_(Int32 SpaceId, String SpaceName) {
            var cmd = new onMainAvatarEnterSpaceCommand();
            cmd.SpaceId = SpaceId;
            cmd.SpaceName = SpaceName;
            this.onMainAvatarEnterSpace.OnNext(cmd);
        }
        
        public virtual void onMainAvatarLeaveSpace_() {
            var cmd = new onMainAvatarLeaveSpaceCommand();
            this.onMainAvatarLeaveSpace.OnNext(cmd);
        }
        
        public virtual void DoMove_(Vector3 Point) {
            var cmd = new DoMoveCommand();
            cmd.Point = Point;
            this.DoMove.OnNext(cmd);
        }
        
        public virtual void OnStopMove_() {
            var cmd = new OnStopMoveCommand();
            this.OnStopMove.OnNext(cmd);
        }
        
        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Read(stream);
            this._avatarStateProperty.SetState(stream.DeserializeString("avatarState"));
            this.goldCount = stream.DeserializeInt("goldCount");;
        }
        
        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Write(stream);
            stream.SerializeString("avatarState", this.avatarState.Name);;
            stream.SerializeInt("goldCount", this.goldCount);
        }
        
        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {
            base.FillCommands(list);
            list.Add(new ViewModelCommandInfo("onMainAvatarEnterSpace", onMainAvatarEnterSpace) { ParameterType = typeof(onMainAvatarEnterSpaceCommand) });
            list.Add(new ViewModelCommandInfo("onMainAvatarLeaveSpace", onMainAvatarLeaveSpace) { ParameterType = typeof(onMainAvatarLeaveSpaceCommand) });
            list.Add(new ViewModelCommandInfo("DoMove", DoMove) { ParameterType = typeof(DoMoveCommand) });
            list.Add(new ViewModelCommandInfo("OnStopMove", OnStopMove) { ParameterType = typeof(OnStopMoveCommand) });
        }
        
        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {
            base.FillProperties(list);
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_avatarStateProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_avatarBagProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_goldCountProperty, false, false, false, false));
        }
    }
    
    public partial class AvatarViewModel {
        
        public AvatarViewModel(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
    }
}
