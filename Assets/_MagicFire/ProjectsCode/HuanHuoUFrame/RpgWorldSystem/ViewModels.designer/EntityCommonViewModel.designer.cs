// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MagicFire.HuanHuoUFrame {
    using MagicFire.HuanHuoUFrame;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.Kernel.Serialization;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.MVVM.ViewModels;
    using UniRx;
    using UnityEngine;
    
    
    public partial class EntityCommonViewModelBase : uFrame.MVVM.ViewModels.ViewModel {
        
        private P<Int32> _typeIDProperty;
        
        private P<String> _entityNameProperty;
        
        private Signal<OnDestroyCommand> _OnDestroy;
        
        private Signal<OnLeaveWorldCommand> _OnLeaveWorld;
        
        public EntityCommonViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
        
        public virtual P<Int32> typeIDProperty {
            get {
                return _typeIDProperty;
            }
            set {
                _typeIDProperty = value;
            }
        }
        
        public virtual P<String> entityNameProperty {
            get {
                return _entityNameProperty;
            }
            set {
                _entityNameProperty = value;
            }
        }
        
        public virtual Int32 typeID {
            get {
                return typeIDProperty.Value;
            }
            set {
                typeIDProperty.Value = value;
            }
        }
        
        public virtual String entityName {
            get {
                return entityNameProperty.Value;
            }
            set {
                entityNameProperty.Value = value;
            }
        }
        
        public virtual Signal<OnDestroyCommand> OnDestroy {
            get {
                return _OnDestroy;
            }
            set {
                _OnDestroy = value;
            }
        }
        
        public virtual Signal<OnLeaveWorldCommand> OnLeaveWorld {
            get {
                return _OnLeaveWorld;
            }
            set {
                _OnLeaveWorld = value;
            }
        }
        
        public override void Bind() {
            base.Bind();
            this.OnDestroy = new Signal<OnDestroyCommand>(this);
            this.OnLeaveWorld = new Signal<OnLeaveWorldCommand>(this);
            _typeIDProperty = new P<Int32>(this, "typeID");
            _entityNameProperty = new P<String>(this, "entityName");
        }
        
        public virtual void Execute(OnDestroyCommand argument) {
            this.OnDestroy.OnNext(argument);
        }
        
        public virtual void Execute(OnLeaveWorldCommand argument) {
            this.OnLeaveWorld.OnNext(argument);
        }
        
        public virtual void OnDestroy_() {
            var cmd = new OnDestroyCommand();
            this.OnDestroy.OnNext(cmd);
        }
        
        public virtual void OnLeaveWorld_() {
            var cmd = new OnLeaveWorldCommand();
            this.OnLeaveWorld.OnNext(cmd);
        }
        
        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Read(stream);
            this.typeID = stream.DeserializeInt("typeID");;
            this.entityName = stream.DeserializeString("entityName");;
        }
        
        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Write(stream);
            stream.SerializeInt("typeID", this.typeID);
            stream.SerializeString("entityName", this.entityName);
        }
        
        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {
            base.FillCommands(list);
            list.Add(new ViewModelCommandInfo("OnDestroy", OnDestroy) { ParameterType = typeof(OnDestroyCommand) });
            list.Add(new ViewModelCommandInfo("OnLeaveWorld", OnLeaveWorld) { ParameterType = typeof(OnLeaveWorldCommand) });
        }
        
        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {
            base.FillProperties(list);
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_typeIDProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_entityNameProperty, false, false, false, false));
        }
    }
    
    public partial class EntityCommonViewModel {
        
        public EntityCommonViewModel(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
    }
}
